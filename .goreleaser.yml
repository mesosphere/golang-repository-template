before:
  hooks:
    - go mod download
env:
  - GO111MODULE=on
builds:
  - main: ./cmd/seed/main.go
    # Set the mod_timestamp to the build time for snapshot builds. This is
    # necessary for docker builder (buildx) to detect the new binary version and
    # use it in the Dockerfile. If CommitTimestamp would be used for snapshot
    # builds the binary would get rebuilt by goreleaser but docker would assume
    # it is unchanged becuase of the existing timestamp and instead of adding
    # newly built binary version to the image the docker would use cached layer
    # (previous docker build) and not include new binary version in the final
    # docker image.
    mod_timestamp: "{{if .IsSnapshot}}{{ .Timestamp }}{{else}}{{ .CommitTimestamp }}{{end}}"
    env:
      - CGO_ENABLED=0
    flags:
      - -trimpath
    ldflags:
      - -s -w
      - -X {{.Env.GOMODULENAME}}/pkg/version.version={{.Version}}
      - -X {{.Env.GOMODULENAME}}/pkg/version.major={{.Major}}
      - -X {{.Env.GOMODULENAME}}/pkg/version.minor={{.Minor}}
      - -X {{.Env.GOMODULENAME}}/pkg/version.patch={{.Patch}}
      - -X {{.Env.GOMODULENAME}}/pkg/version.revision={{.FullCommit}}
      - -X {{.Env.GOMODULENAME}}/pkg/version.commitDate={{.CommitDate}}
      - -X {{.Env.GOMODULENAME}}/pkg/version.branch={{.Branch}}
      - -X {{.Env.GOMODULENAME}}/pkg/version.gitTreeState={{.Env.GIT_TREE_STATE}}
      - -X {{.Env.GOMODULENAME}}/pkg/version.builtBy=goreleaser
    goos:
      - darwin
      - linux
      - windows
    goarch:
      - amd64
      - arm64
dockers:
  - image_templates:
    - "{{.Env.DOCKER_REPOSITORY}}/{{.ProjectName}}:{{ .Tag }}-amd64"
    dockerfile: Dockerfile
    use_buildx: true
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/amd64"
  - image_templates:
    - "{{.Env.DOCKER_REPOSITORY}}/{{.ProjectName}}:{{ .Tag }}-arm64"
    dockerfile: Dockerfile
    use_buildx: true
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/arm64"
    goarch: arm64
docker_manifests:
  - name_template: "{{.Env.DOCKER_REPOSITORY}}/{{.ProjectName}}:{{ .Tag }}"
    image_templates:
      - "{{.Env.DOCKER_REPOSITORY}}/{{.ProjectName}}:{{ .Tag }}-amd64"
      - "{{.Env.DOCKER_REPOSITORY}}/{{.ProjectName}}:{{ .Tag }}-arm64"
archives:
  - format_overrides:
    - goos: windows
      format: zip
release:
  github:
  prerelease: auto
